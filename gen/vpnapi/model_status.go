/*
 * VPN Gateway API
 *
 * A REST compliant API to manage a VPN Gateway instance.
 *
 * API version: 1.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package vpnapi

type Status struct {

	// Public IP that requests going through this gateway will have as a source
	CurrentPublicIp string `json:"currentPublicIp"`

	// Currently active VPN Configuration, blank if the VPN Gateway is not connected.
	ActiveVpnConfig string `json:"activeVpnConfig"`

	// Messages (success and error) coming from vpn client
	Message string `json:"message"`
}

// AssertStatusRequired checks if the required fields are not zero-ed
func AssertStatusRequired(obj Status) error {
	elements := map[string]interface{}{
		"currentPublicIp": obj.CurrentPublicIp,
		"activeVpnConfig": obj.ActiveVpnConfig,
		"message":         obj.Message,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseStatusRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Status (e.g. [][]Status), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseStatusRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aStatus, ok := obj.(Status)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertStatusRequired(aStatus)
	})
}
